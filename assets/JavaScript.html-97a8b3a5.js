import{_ as a,p as e,q as r,a1 as t}from"./framework-5866ffd3.js";const i={},c=t('<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> JavaScript</h1><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2><p>行内绑定</p><p>DOM0级绑定事件（拓展事件属性）</p><p>DOM2级绑定事件（添加事件监听）</p><h2 id="javascript对象" tabindex="-1"><a class="header-anchor" href="#javascript对象" aria-hidden="true">#</a> JavaScript对象</h2><p>JavaScript中共有三种对象：自定义对象、宿主对象、标准内置对象。</p><h3 id="标准内置对象" tabindex="-1"><a class="header-anchor" href="#标准内置对象" aria-hidden="true">#</a> 标准内置对象</h3><p>标准内置对象指的是<strong>处在全局作用域里的多个对象</strong>。可以在全局作用域里通过使用this访问到（但只有在 ECMAScript 5 的非严格模式下才可以，在严格模式下得到的是 undefined）。</p>',9),h=[c];function d(n,s){return e(),r("div",null,h)}const o=a(i,[["render",d],["__file","JavaScript.html.vue"]]);export{o as default};
