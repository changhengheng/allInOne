import{_ as t,M as p,p as e,q as o,R as n,t as l,N as c,a1 as s}from"./framework-5866ffd3.js";const i="/allInOne/assets/lifecycle-8f580e79.png",u={},r=s('<h1 id="day04" tabindex="-1"><a class="header-anchor" href="#day04" aria-hidden="true">#</a> day04</h1><h2 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h2><p><img src="'+i+`" alt="lifecycle"></p><p>概念：实例从创建到销毁的一系列过程</p><p>生命周期钩子：在生命周期过程中会自动调用的一些方法</p><blockquote><p>从创建实例 new Vue() 开始</p></blockquote><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>组件还没开始讲，但组件和实例的生命周期是完全一样的</p><p>生命周期钩子属于Vue构造函数的配置项，不写在methdos里</p><p>生命周期钩子是<strong>生命周期过程</strong>中的一些自动调用的方法</p></div><p>生命周期钩子里的this都指向当前实例对象</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>console.log</code> 的缺点：打印出来的不是代码执行时的结果，而是执行完的结果</p><p>解决：打debugger</p></div><p><code>beforeCreate</code></p><ul><li>数据代理和数据劫持还没有开始，data数据和methods方法并未代理到vm上，无法访问data和methods</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>严格讲，methods没有走代理（object.defineProperty）,而是直接挂到了vm上</p></div><p><code>created</code></p><ul><li>数据代理和数据劫持完成后触发的钩子，data数据和methods方法会通过数据代理到vm上，此时可以访问data和methods</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>create</code> 的是数据</p><p><code>mount</code> 的是DOM</p><p><code>update</code> 的是数据</p><p><code>destroy</code> 的是vm实例对象和视图与模型之间的关系，vm还在，不是被删除了</p></div><p>模板解析：</p><p>过程：解析模板，在内存中生成虚拟DOM，此时页面还不能显示解析好的内容</p><ol><li>判断有没有el配置项</li><li>没有就调 <code>$mount()</code>，然后看有没有 <code>template</code> 配置项</li><li>有就把模板编译到 <code>render函数</code>（Vue内部的函数）进行渲染</li><li>没有就把el绑定的容器作为模板</li></ol><blockquote><p><code>$mount</code> 在vm的原型对象上，不在vm身上</p><p>可以直接用vm调 <code>vm.$mount</code></p></blockquote><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>react不会在模板里写结构，而是直接写的DOM。Vue也一样，提供了template配置项，用来写DOM。组件中会有封装好的 <code>&lt;template&gt;</code> 组件来写DOM。</p></div><p>模板解析之后进入挂载前钩子：</p><p><code>beforeMount</code></p><ul><li>此时页面呈现的是未经编译的DOM结构，所有对DOM的操作都不生效。除此之外，Vue会在vm身上存一份虚拟DOM，方便后期DOM更新时进行对比。</li></ul><p>之后，内存中的虚拟DOM会被转为真实DOM插入页面（此前对虚拟DOM的操作都无效，会被覆盖掉）。</p><p>真实DOM插入页面之后触发 <code>mounted</code>：</p><p><code>mounted</code>：</p><ul><li><p>页面中呈现的是Vue编译好的DOM（将虚拟DOM替换掉真实DOM），看到的是真正的页面</p></li><li><p>此时可以获取到并操作真实DOM</p></li><li><p><code>mounted</code>中一般可以做的事：</p><ol><li>设置定时器</li><li>发请求</li><li>发布订阅</li><li>绑定自定义事件</li></ol><p>等初始化操作</p></li></ul><p>至此，页面初始化过程结束</p><p>更新的循环：</p><ol><li>当数据更新时，执行<code>beforeUpdate</code></li><li><code>beforeUpdate</code> 更新数据，不更新页面。数据会变成新的，但是页面还显示着以前的内容。</li><li>根据新数据生成新虚拟DOM，之后与旧虚拟DOM对比，最终完成页面更新</li><li>更新完，调 <code>updated</code>。此时数据是新的，页面也是新的</li><li>这个循环在每次数据更新时都会执行</li></ol><p><code>beforeUpdate</code></p><ul><li>更新数据，不更新视图</li></ul><p><code>updated</code></p><ul><li>更新视图，数据和视图都是新的</li></ul><p>一般来讲，销毁前和销毁后不会自动进入，当调用 <code>vm.$destroy</code> 时，执行 <code>beforeDestroy</code>。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>$destroy()</code> 方法在vm的原型对象上，其他的一些在vm原型对象上的方法：</p><p><code>$watch</code></p><p><code>$mount</code></p></div><p><code>beforeDestroy</code></p><ul><li><p>此时，vm中的data、methods、指令等等，都处于可用状态，马上要执行销毁过程。</p></li><li><p>这个阶段一般：</p><ol><li>关闭定时器</li><li>取消订阅</li><li>解绑自定义事件</li></ol><p>等收尾的操作</p></li></ul><p><code>destroyed</code></p><p>销毁不是卸载。对比React组件的卸载。Vue销毁的是vm，不是视图，也不是模型数据。页面还能显示，数据还能使用，但是视图和模型之间的联系断了，对数据的操作都不会影响到视图。（data、methods、指令都处于可用状态）</p><p>区分实例的生命周期和组件的生命周期，销毁的是vm不是组件。所以数据和视图都还是可用的。</p><p>总结:</p><ol><li><p>创建： beforeCreate created</p><p>beforeCreate 创建前,data数据和methods方法并未代理到vm上,数据代理和数据劫持并未开始。</p><p>created 创建后, data数据和methods方法并代理到vm上，在这可以使用数据和methods方法,数据代理和数据劫持在这一步完成。</p></li><li><p>挂载： beforeMount mounted</p><p>beforeMount 挂载前。页面展示的未经编译的dom，所有对dom的操作最终都不奏效。生成虚拟DOM对象，并保存到 vm 上 $el。</p><p>mounted 挂载后。此时虚拟dom替换掉真实dom，初始化结束。做初始化的工作：开启定时器，发送ajax请求，消息发布订阅，绑定自定义事件。</p></li><li><p>更新： beforeUpdate updated beforeUpdate 更新前。数据更新了，页面未被更新。页面和数据不同步 updated 更新后。数据更新了，页面也被更新。页面和数据同步【通过新旧虚拟dom的比较，对应更新数据或者dom】</p></li><li><p>销毁：beforeDestroy destroyed</p><p>beforeDestroy 销毁前。data.methods.指令都处于可用状态，但是一般不操作数据，数据会发生变化，但是不会渲染到视图中，因为vm开始被销毁了，做收尾性的工作。解绑定时器，取消订阅，解绑自定义事件</p></li></ol><h3 id="生命周期常见问题" tabindex="-1"><a class="header-anchor" href="#生命周期常见问题" aria-hidden="true">#</a> 生命周期常见问题</h3><ol><li>哪个钩子中不能访问 data 数据 和 methods 方法？ ---- beforeCreate</li><li>最早在哪个钩子中可以给 vm 对象添加属性？ ---- beforeCreate</li><li>哪个钩子的data数据和页面是不同步的？ ---- beforeUpdate</li><li>data中的数据和methods中的方法最早可以在哪个钩子中获取？ --- created</li><li>最早可以在哪个钩子中发送ajax请求？ --- created</li></ol><h3 id="关于销毁" tabindex="-1"><a class="header-anchor" href="#关于销毁" aria-hidden="true">#</a> 关于销毁</h3><ol><li>销毁的是 vm 和视图的联系，并没有销毁掉vm实例对象。</li><li>数据data, methods方法都存在，只是数据不是响应式。</li><li>销毁了 自定义事件，并不会销毁js内置的事件。</li></ol><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h2><ol><li>高度封装 html + css + js</li><li>组件最终的使用形式 标签。</li></ol><h2 id="vue-组件" tabindex="-1"><a class="header-anchor" href="#vue-组件" aria-hidden="true">#</a> vue 组件</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>.vue文件最终会通过webpack编译为浏览器可以识别的文件</p></div><ol><li>非单文件组件 .html 包含多个组件 缺点： 没有提示、 有多个组件</li><li>单文件组件 .vue 只有一个组件</li><li>vue 实例对象所拥有的数据 组件对象 基本也有.</li><li>组件名称 ： 首字母必须大写 小驼峰 大驼峰</li></ol><h3 id="非单文件组件" tabindex="-1"><a class="header-anchor" href="#非单文件组件" aria-hidden="true">#</a> 非单文件组件</h3><p>三步：</p><ol><li>创建</li><li>注册</li><li>使用</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 3.使用组件 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Student</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// 1. 组件必须在实例之前创建</span>
<span class="token keyword">let</span> Student <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;
    &lt;h2&gt;{{name}}&lt;/h2&gt;
    &lt;h2&gt;{{age}}&lt;/h2&gt;
    &lt;h2&gt;{{gender}}&lt;/h2&gt;
    &lt;button @click=&quot;add&quot;&gt;点击&lt;/button&gt;
    &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
        <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 2. 注册组件</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    Student<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="app根组件" tabindex="-1"><a class="header-anchor" href="#app根组件" aria-hidden="true">#</a> App根组件</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> Student <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;
      &lt;h2&gt;{{name}}&lt;/h2&gt;
      &lt;h2&gt;{{age}}&lt;/h2&gt;
      &lt;h2&gt;{{gender}}&lt;/h2&gt;
      &lt;button @click=&quot;add&quot;&gt;点击&lt;/button&gt;
    &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
        <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> Book <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;
      &lt;h2&gt;{{title}}&lt;/h2&gt;
      &lt;h2&gt;{{price}}&lt;/h2&gt;
      &lt;button @click=&quot;add&quot;&gt;点击&lt;/button&gt;
      &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;斯通纳&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// this指向当前组件对象</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> App <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;&lt;Student /&gt;
    &lt;Book /&gt;&lt;/div&gt;
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      Student<span class="token punctuation">,</span>
      Book<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;App /&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      App<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="全局组件" tabindex="-1"><a class="header-anchor" href="#全局组件" aria-hidden="true">#</a> 全局组件</h3><p><code>Vue.component(&quot;组件名&quot;，组件)</code> 注册全局组件（第三个原型对象上的方法）</p><p>name配置项的作用一：给组件起名，显示在开发者工具里。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> Header <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Header&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&quot;&lt;h1&gt;Header&lt;/h1&gt;&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;Head&quot;</span><span class="token punctuation">,</span> Header<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> Student <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;
      &lt;Head /&gt;
      &lt;h2&gt;{{name}}&lt;/h2&gt;
      &lt;h2&gt;{{age}}&lt;/h2&gt;
      &lt;h2&gt;{{gender}}&lt;/h2&gt;
      &lt;button @click=&quot;add&quot;&gt;点击&lt;/button&gt;
    &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
        <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> Book <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;
      &lt;Head /&gt;
      &lt;h2&gt;{{title}}&lt;/h2&gt;
      &lt;h2&gt;{{price}}&lt;/h2&gt;
      &lt;button @click=&quot;add&quot;&gt;点击&lt;/button&gt;
      &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;斯通纳&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> App <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      &lt;Head /&gt;
      &lt;Student /&gt;
      &lt;Book /&gt;
    &lt;/div&gt;
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      Student<span class="token punctuation">,</span>
      Book<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;App /&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      App<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例和组件的关系" tabindex="-1"><a class="header-anchor" href="#实例和组件的关系" aria-hidden="true">#</a> 实例和组件的关系</h3><p>组件和实例一样，也有数据代理和数据劫持，也有声明周期钩子。组件内部的this指向当前组件对象。</p><p>Vue.extend() 返回一个VueComponent构造函数，用标签使用组件时，Vue内部会自动实例化这个构造函数，得到一个实例对象，这个实例对象就是组件对象——vc。</p><p>每次返回的都是不一样的函数，源码是这样写的：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function-variable function">extend</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">extendOptions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//  ...</span>
    <span class="token keyword">var</span> <span class="token function-variable function">Sub</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">VueComponent</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Sub<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总结：</p><ol><li>vue 组件本质就是一个 名为 VueComponent() 的构造函数</li><li>VueComponent() 是 Vue.extend() 每次返回的唯一、全新的构造函数。</li><li>当使用组件标签时，vue 内部 会 执行 new VueComponent() 得到一个实例对象，这个实例对象就是组件对象。 vc。</li><li>vc 内部的 methods、computed、watch、八个生命周期钩子的this 指向 当前的组件对象vc。</li><li>vm 内部的 methods、computed、watch、八个生命周期钩子的this 指向 当前的实例对象vm。</li><li>vm 上 有 el 属性 ，data【对象】。 vc上不能有el，且 data 必须为函数，返回一个对象。</li><li>vc 上 也有数据代理、数据劫持、生命周期钩子、computed、watch</li></ol><h2 id="单文件组件格式" tabindex="-1"><a class="header-anchor" href="#单文件组件格式" aria-hidden="true">#</a> 单文件组件格式</h2>`,70),d={href:"https://vue-loader.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},k=s(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;App&quot;</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="extend简写" tabindex="-1"><a class="header-anchor" href="#extend简写" aria-hidden="true">#</a> extend简写</h3><p>单文件组件使用extend的简写：<code>{}</code>（配置对象），单文件组件本质上就是 <code>Vue.extend()</code> 返回的 <code>VueComponent</code> 构造函数的实例化对象——组件对象</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span> <span class="token comment">//这个配置对象对象就是单文件组件的简写，Vue内部会将其解析成Vue.extend()的配置对象</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;App&quot;</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="脚手架" tabindex="-1"><a class="header-anchor" href="#脚手架" aria-hidden="true">#</a> 脚手架</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>main.js是入口文件</p></div><ol><li><p>全局安装 vue环境</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> @vue/cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建vue项目</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> vue create vuecli<span class="token punctuation">[</span>项目名<span class="token punctuation">]</span>  注意：项目名不能大写，不能有汉字
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>启动项目</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run serve
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol>`,7);function v(m,b){const a=p("ExternalLinkIcon");return e(),o("div",null,[r,n("p",null,[n("a",d,[l("Vue Loader"),c(a)])]),k])}const h=t(u,[["render",v],["__file","day04.html.vue"]]);export{h as default};
