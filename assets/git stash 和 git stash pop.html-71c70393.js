import{_ as t,p,q as s,a1 as a}from"./framework-5866ffd3.js";const i={},h=a("<p>一、git pull 拉代码的时候，或者切换分支的时候，防止冲突和不便，会用到git stash，将工作区内容暂存起来。</p><p>比如：为了fix 一个bug, 先stash, 使返回到自己上一个commit, 改完bug之后再stash pop, 继续原来的工作。</p><p>怎么办：</p><p>1、git stash</p><p>​ 备份当前工作区的内容，保存到git 栈中，从最近的一次commit中读取相关内容</p><p>2、git pull 或者做其他的工作</p><p>3、git stash pop</p><p>​ 从git栈中获取到最近一次stash进去的内容，恢复工作区的内容。。获取之后，会删除栈中对应的stash。。</p><p>​ 由于可能会stash多次，git使用栈管理，我们可以使用git stash list查看所有的stash</p><p>git stash list</p><p>​ 显示git栈中的所有工作区内容的备份，</p><p>​ 比如使用git stash apply stash@{1}，就可以把版本号为stash@{1}的备份取出，不会删除对应的stash。。0为最新版本</p><p>git stash clear</p><p>​ 清空git栈</p><p>二、但是git stash pop取出备份的时候也会出现冲突</p><p>比如，有个文件login.java，，你修改了一段代码，git stash保存以后，你从服务器上继续git pull了别人的代码，，</p><p>如果此时，别人的代码也修改了login.java。。。</p><p>此时当我们使用git stash pop 的时候，就会发生冲突，因为我们的修改不是基于最新的pull下来的文件的基础上。。所以git很难判断，</p><p>解决方法：</p><p>备份我们修改后的文件，删除程序文件中我们所做的修改，重新pull，然后在用我们备份好的文件替换掉，再push上去即可。</p>",20),g=[h];function l(o,e){return p(),s("div",null,g)}const c=t(i,[["render",l],["__file","git stash 和 git stash pop.html.vue"]]);export{c as default};
